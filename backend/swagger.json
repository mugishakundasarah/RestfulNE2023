{
    "openapi": "3.0.0",
    "info": {
      "title": "EmployeeMS APIs",
      "version": "1.0.0",
      "description": "API documentation for Your App"
    },
    "tags": [
      {
        "name": "authentication-controller",
        "description": "Operations related to authentication"
      }
    ],
    "servers": [
      {
        "url": "http://localhost:3100"
      }
    ],
    "paths": {
      "/auth/signup": {
        "post": {
          "summary": "Save user",
          "tags": ["authentication-controller"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User saved successfully",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/auth/signin": {
        "post": {
          "summary": "Signin",
          "tags": ["authentication-controller"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "required": true
                    },
                    "password": {
                      "email" : {
                        "type" : {
                          "type" : "string",
                          "required" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User signin successful",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/employees": {
        "post": {
          "tags": ["Employees"],
          "summary": "Create a new employee",
          "description": "Create a new employee with the provided details",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Employee created successfully"
            },
            "400": {
              "description": "Invalid request data"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        },
        "get": {
          "tags": ["Employees"],
          "summary": "Get paginated employees",
          "description": "Retrieve employees in a paginated manner",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Page number",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of employees per page",
              "required": false,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type": "object",
                "properties": {
                  "employees": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Employee"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "phoneNumber": {
              "type": "string",
              "required": true
            },
            "fullName": {
              "type": "string",
              "required": true
            },
            "email": {
              "type": "string",
              "required": true
            },
            "password": {
              "type": "string",
              "required": true
            },
            "role": {
              "type": "string",
              "required": true,
              "enum": ["RESTAURANT_MANAGER", "CLIENT"]
            }
          }
        },
        "Employee": {
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "nationalId": {
              "type": "string",
              "maxLength": 16
            },
            "telephone": {
              "type": "string",
              "maxLength": 10
            },
            "email": {
              "type": "string",
              "format": "email"
            },
            "department": {
              "type": "string"
            },
            "position": {
              "type": "string"
            },
            "laptopManufacturer": {
              "type": "string"
            },
            "laptopModel": {
              "type": "string"
            },
            "serialNumber": {
              "type": "string"
            }
          },
          "required": [
            "firstName",
            "lastName",
            "nationalId",
            "telephone",
            "email",
            "department",
            "position",
            "laptopManufacturer",
            "laptopModel",
            "serialNumber"
          ]
        }
      },
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }, 
    "security" : [
      {
        "bearerAuth" : []
      }
    ]
  }
  